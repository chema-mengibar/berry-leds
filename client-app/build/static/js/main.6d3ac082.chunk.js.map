{"version":3,"sources":["shared/theme.shared.js","style/main.style.js","components/AppWrapper/AppWrapper.js","components/BlockLed/Server.BlockLed.js","components/BlockLed/BlockLed.js","store/actions.store.js","components/BlockControl/ColorBarWrapper.BlockControl.js","components/BlockControl/BlockControl.js","App.js","store/reducer.store.js","index.js"],"names":["theme","color","light","grey_dark","grey_light","red","green","blue","fontFamily","primary","fontWeigth","bold","MainCSS","createGlobalStyle","_templateObject","Wrapper","styled","div","AppWrapper_templateObject","AppWrapper","_ref","children","react_default","a","createElement","main_style","Server_BlockLed","sendRGB","_sendRGB","Object","asyncToGenerator","regenerator_default","mark","_callee","opts","wrap","_context","prev","next","fetch","method","body","JSON","stringify","then","response","json","data","console","log","html_url","stop","_x","apply","this","arguments","mapDispatchToProps","setColor","type","channelsToHex","channels","Server","rangeTo255Hex","value","hexStr","Math","round","toString","toUpperCase","length","BlockLedWrapper","BlockLed_templateObject","BlockLedLabel","_templateObject2","Span","span","_templateObject3","ColorInfo","_templateObject4","ColorInfoIcon","_templateObject5","props","hexcolor","ColorInfoData","_templateObject6","connect","state","appState","className","setChannel","channel","RgbColorRange","ColorBarWrapper_BlockControl_templateObject","ColorRangeBar","ColorBarWrapper_BlockControl_templateObject2","ColorRangeCursor","ColorBarWrapper_BlockControl_templateObject3","procent","ColorRangeValue","ColorBarWrapper_BlockControl_templateObject4","ownProps","objectSpread","rgbColor","mode","_useState","useState","name","_useState2","slicedToArray","rgbChannel","setRgbChannel","modeMap","pwm","dec","hex","useEffect","onClick","e","yCursorPosition","nativeEvent","offsetX","currentTarget","getBoundingClientRect","width","convertedValue","valueConversion","storeSetMode","BlockControlWrapper","BlockControl_templateObject","BlockControlLabel","BlockControl_templateObject2","MenuMode","BlockControl_templateObject3","Tab","BlockControl_templateObject4","active","css","BlockControl_templateObject5","RgbSelector","BlockControl_templateObject6","tabs","id","label","rgb","map","item","key","uniqueId","tab","ColorBarWrapper_BlockControl","App","components_AppWrapper_AppWrapper","components_BlockLed_BlockLed","components_BlockControl_BlockControl","initialState","max","combineReducers","undefined","action","defineProperty","store","createStore","rootReducer","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.6d3ac082.chunk.js","sourcesContent":["const theme = {\r\n  color: {\r\n    light: '255,255,255',\r\n    grey_dark: '29,28,32',\r\n    grey_light: '56,54,61',\r\n\r\n    red: '#ff0000',\r\n    green: '#00FF00',\r\n    blue: '#00FFFF',\r\n\r\n  },\r\n  fontFamily: {\r\n    primary: 'Lato'\r\n  },\r\n  fontWeigth: {\r\n    primary: '300',\r\n    bold: '700',\r\n  }\r\n};\r\n\r\nexport default theme;","import { createGlobalStyle } from 'styled-components';\r\nimport theme from 'shared/theme.shared'\r\n\r\nconst MainCSS = createGlobalStyle`\r\n\r\n  @import url('https://fonts.googleapis.com/css?family=Lato:300,700');\r\n\r\n  html, body, #root{\r\n    margin: 0;\r\n    padding: 0;\r\n    border: 0;\r\n    font-size: 100%;\r\n    font: inherit;\r\n    vertical-align: baseline;\r\n    box-sizing: border-box;\r\n    width: 100%;\r\n    min-height: 100%;\r\n    height:100%;\r\n  }\r\n\r\n  body {\r\n    line-height: 1;\r\n    font-family: ${ theme.fontFamily.primary};\r\n  }\r\n\r\n`;\r\n\r\nexport default MainCSS;","// @flow\r\n\r\nimport React, { Component, Fragment } from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport MainCSS from 'style/main.style';\r\nimport theme from 'shared/theme.shared';\r\n\r\nconst Wrapper = styled.div`\r\n  background-color: red;\r\n  height:100%;\r\n  width:100%;  \r\n  display:flex;\r\n  flex-direction:column;\r\n \r\n  @media (max-width: 700px) {\r\n    background-color: ${theme.color.green};\r\n  }\r\n`;\r\n\r\n//AppWrapper or Fragment\r\nconst AppWrapper = ({\r\n  children,\r\n}:Props):Node => (\r\n  <Wrapper>\r\n    <MainCSS/>\r\n    {children}\r\n  </Wrapper>\r\n);\r\n\r\nexport default AppWrapper;","export default {\r\n\r\n  // fetchAsyncMD: async ( libUrl ) => {\r\n  //   //https://developer.mozilla.org/es/docs/Web/API/Fetch_API/Utilizando_Fetch\r\n  //   //https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch\r\n\r\n  //   // var myHeaders = new Headers();\r\n  //   // myHeaders.append(\"Content-Type\", \"text/plain\");\r\n  //   // myHeaders.append(\"Content-Length\", content.length.toString());\r\n  //   // myHeaders.append(\"X-Custom-Header\", \"ProcessThisImmediately\");\r\n\r\n  //   // var miInit = { method: 'GET',\r\n  //   //        headers: myHeaders,\r\n  //   //        mode: 'no-cors',\r\n  //   //        cache: 'default' };\r\n\r\n  //   //let response = await fetch( libUrl, miInit );\r\n\r\n  //   var myHeaders = new Headers();\r\n  //   myHeaders.append(\"Content-Type\", \"text/plain\");\r\n  //   var miInit = { method: 'GET',\r\n  //         headers: myHeaders,\r\n  //         mode: 'cors',\r\n  //         cache: 'default' };\r\n  //   let response = await fetch( libUrl, miInit );\r\n\r\n  //   let data = await response;\r\n  //   return data.text();\r\n\r\n  // },\r\n\r\n  sendRGB: async(opts) => {\r\n    fetch('/color', {\r\n      method: 'post',\r\n      body: JSON.stringify(opts)\r\n    }).then(function(response) {\r\n      return response.json();\r\n    }).then(function(data) {\r\n      console.log( 'responseerror', data.html_url);\r\n    });\r\n  }\r\n\r\n}","import React from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport theme from 'shared/theme.shared'\r\nimport Server from './Server.BlockLed';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { setColor } from 'store/actions.store';\r\n\r\nconst mapStateToProps = state => ({\r\n  color: channelsToHex( state.appState.channels )\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  setColor: setColor\r\n}\r\n\r\nconst channelsToHex = channels => {\r\n\r\n  Server.sendRGB( channels );\r\n  \r\n  const rangeTo255Hex = value =>{ \r\n    let hexStr = Math.round(( value * 255)/ 100).toString(16).toUpperCase();\r\n    return ( hexStr.length === 1 )? '0' + hexStr : hexStr;\r\n  };\r\n\r\n  let r = rangeTo255Hex(channels.red)\r\n  let g = rangeTo255Hex(channels.green)\r\n  let b = rangeTo255Hex(channels.blue)\r\n  return '#' + r + g + b;\r\n}\r\n\r\nconst BlockLedWrapper = styled.div`\r\n\r\n  background: rgb(${theme.color.grey_dark});\r\n  // background: -moz-linear-gradient(-45deg, rgb(${theme.color.grey_light}) 0%, rgb(${theme.color.grey_dark}) 63%); \r\n  // background: -webkit-linear-gradient(-45deg, rgb(${theme.color.grey_light}) 0%, rgb(${theme.color.grey_dark}) 63%);\r\n  background: linear-gradient( 165deg, rgb(${theme.color.grey_light}) 0%, rgb(${theme.color.grey_dark}) 63%);\r\n  // filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='rgb(${theme.color.grey_light})', endColorstr='rgb(${theme.color.grey_dark})',GradientType=1 );\r\n  overflow:auto;\r\n  min-height:200px;\r\n  width:100%;  \r\n  padding:30px 20px 0;\r\n  box-sizing: border-box;\r\n`\r\n\r\nconst BlockLedLabel = styled.div`\r\n  margin:0;\r\n  padding:0;\r\n  height:20px;\r\n  width:100%;\r\n  height:auto;\r\n  float:left;\r\n`;\r\n\r\nconst Span = styled.span`\r\n    color:rgb( ${theme.color.light});\r\n    font-weight: ${theme.fontWeigth.primary};\r\n    font-size:28px;\r\n    text-transform: uppercase;\r\n`;\r\n\r\nconst ColorInfo = styled.div`\r\n  float:left;\r\n  min-height:100px;\r\n  height:auto;\r\n  overflow:hidde;\r\n  width:100%;\r\n  margin-top:10px;\r\n`;\r\n\r\nconst ColorInfoIcon = styled.div`\r\n  float:left;\r\n  height:100px;\r\n  width:100px;\r\n  border:10px solid rgba(12,12,12,.5);\r\n  border-radius: 0px 30px 30px 30px;\r\n  background-color: ${(props) => props.hexcolor };\r\n  margin-right:20px;\r\n`\r\n\r\nconst ColorInfoData = styled.div`\r\n\r\n  color: rgb(${theme.color.light});\r\n  text-transform: uppercase;\r\n  line-height: 100px;\r\n  \r\n  .color-info-data__label{\r\n    font-weight: ${theme.fontWeigth.primary};\r\n    margin-right:7px;\r\n  }\r\n\r\n  .color-info-data__value{\r\n    font-weight: ${theme.fontWeigth.bold};\r\n  }\r\n`\r\n\r\nconst BlockLed = (props) => {\r\n  return(\r\n    <BlockLedWrapper>\r\n      <BlockLedLabel> \r\n        <Span>Led</Span>\r\n      </BlockLedLabel>\r\n      <ColorInfo>\r\n        <ColorInfoIcon hexcolor={props.color}></ColorInfoIcon>\r\n        <ColorInfoData>\r\n          <span className=\"color-info-data__label\">HEX</span>\r\n          <span className=\"color-info-data__value\"> {props.color} </span>\r\n        </ColorInfoData>\r\n      </ColorInfo>\r\n    </BlockLedWrapper>\r\n  )\r\n}\r\n\r\nexport default connect( mapStateToProps, mapDispatchToProps )( BlockLed )","export const setColor = color => ({\r\n  type: 'SET_COLOR',\r\n  color\r\n})\r\n\r\nexport const setChannel = ( value, channel ) => {\r\n  return {\r\n    type: 'SET_CHANNEL',\r\n    value,\r\n    channel\r\n  }\r\n}\r\n\r\nexport const setMode = mode => ({\r\n  type: 'SET_MODE',\r\n  mode\r\n})","import React, { useState, useEffect } from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport theme from 'shared/theme.shared';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { setChannel, setColor } from 'store/actions.store';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n  // rgbColor: ownProps.rgbColor,\r\n  // mode: ownProps.mode,\r\n  ...ownProps,\r\n  channels: state.appState.channels,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  setChannel: setChannel,\r\n}\r\n\r\nconst RgbColorRange = styled.div`\r\n  display:flex;\r\n  height:40px;\r\n  width:100%;\r\n  margin-top:20px;\r\n  position:relative;\r\n  float:left;\r\n`\r\nconst ColorRangeBar = styled.div`\r\n  height:100%;\r\n  flex-grow:1;\r\n  background-color: rgba( ${theme.color.grey_dark}, .1 );\r\n  cursor:pointer;\r\n`\r\n\r\nconst ColorRangeCursor = styled.div`\r\n  width:  ${props => props.procent + '%'};\r\n  height:100%;\r\n  background-color: ${props => props.color };\r\n  -webkit-transition: width ${props => props.procent}ms ease-out;\r\n  -ms-transition: width 400ms ease-out;\r\n  transition: width 400ms ease-out;\r\n`\r\n\r\nconst ColorRangeValue = styled.div`\r\n  width:40px;\r\n  height: 100%;\r\n  background-color: rgb(${theme.color.grey_dark});\r\n  color:rgb(  ${theme.color.light} );\r\n  line-height:40px;\r\n  text-align:center;\r\n  cursor:pointer;\r\n`\r\n\r\nconst ColorBarWrapper = ( props\r\n  //{ rgbColor = { name:'white', color:'#ffffff'  },  mode = 'pwm' }\r\n) => {\r\n\r\n  const  rgbColor = props.rgbColor; //{ name:'red', color:'#ff0000'  };\r\n  const mode = props.mode; // 'pwm';\r\n\r\n  const [ rgbChannel, setRgbChannel] = useState( props.channels[ rgbColor.name ] );\r\n  const modeMap = {\r\n    pwm: 100,\r\n    dec: 255,\r\n    hex: 255\r\n  };\r\n\r\n  useEffect(() => {\r\n    props.setChannel( rgbChannel, rgbColor.name )\r\n  }, [rgbChannel]);\r\n\r\n\r\n  const valueConversion = ( value ) => {\r\n    let convertedValue =  Math.round(( value * modeMap[mode])/ 100);\r\n    if (mode === 'hex'){\r\n      let hex =  convertedValue.toString(16).toUpperCase();\r\n      convertedValue = ( hex.length === 1 ) ?  '0'+hex : hex;\r\n    }  \r\n    return convertedValue;\r\n  }\r\n\r\n  return (\r\n    <RgbColorRange>\r\n      <ColorRangeBar onClick={(e)=> { \r\n          let yCursorPosition = Math.round( (e.nativeEvent.offsetX * 100 ) / e.currentTarget.getBoundingClientRect().width);\r\n          setRgbChannel( yCursorPosition );\r\n        } } >\r\n        <ColorRangeCursor color={ rgbColor.color } procent={ rgbChannel }></ColorRangeCursor>\r\n      </ColorRangeBar>\r\n      <ColorRangeValue onClick={(e)=> { \r\n          let xtremValue = (rgbChannel === 100 )? 0 : 100;\r\n          setRgbChannel( xtremValue );\r\n        } } > { valueConversion( rgbChannel ) } </ColorRangeValue>\r\n    </RgbColorRange>\r\n  )\r\n}\r\n\r\nexport default connect( mapStateToProps, mapDispatchToProps )( ColorBarWrapper )","import React, { useState, useEffect } from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport uniqueId from 'lodash/uniqueId';\r\nimport theme from 'shared/theme.shared';\r\nimport ColorBarWrapper from './ColorBarWrapper.BlockControl';\r\nimport { connect } from 'react-redux';\r\nimport { setMode } from 'store/actions.store';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n  ...ownProps,\r\n  mode: state.appState.mode,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  storeSetMode: setMode\r\n}\r\n\r\nconst BlockControlWrapper = styled.div`\r\n  height:250px;\r\n  width:100%;  \r\n  padding:30px 0 0;\r\n  background-color: rgb(${theme.color.grey_dark});\r\n  flex-grow:1;\r\n  box-sizing: border-box;\r\n`\r\n\r\nconst BlockControlLabel = styled.div`\r\n  padding-left:30px;\r\n  margin-bottom:20px;\r\n\r\n  .title{\r\n    color:rgb( ${theme.color.light} );\r\n    font-weight: ${theme.fontWeigth.primary};\r\n    font-size:28px;\r\n    text-transform: uppercase;\r\n  }\r\n`\r\nconst MenuMode = styled.div`\r\n  height:30px;\r\n  width:100%;\r\n  display:flex;\r\n  flex-direction:row;\r\n`\r\nconst Tab = styled.div`\r\n  flex-grow:1;\r\n  text-align:center;\r\n  line-height:30px;\r\n  background: rgba( ${theme.color.light} , .04);\r\n  color: rgb(${theme.color.light});\r\n  cursor:pointer;\r\n  -webkit-transition: background-color 400ms ease-in;\r\n  -ms-transition: background-color 400ms ease-in;\r\n  transition: background-color 400ms ease-in;\r\n  \r\n  // ${ (props) => props.active && css`\r\n  //   background: rgba( ${theme.color.light}, 1.0);\r\n  //   color: rgb(${theme.color.grey_dark});\r\n  // `}\r\n  \r\n  &.active{\r\n    background: rgba( ${theme.color.light}, 1.0);\r\n    color: rgb(${theme.color.grey_dark});\r\n  }\r\n`\r\n\r\nconst RgbSelector = styled.div`\r\n  background-color:rgb( ${theme.color.light} );\r\n  height:100%;\r\n  width:100%;\r\n`\r\n\r\nconst BlockControl = (props) => {\r\n\r\n  const tabs = [\r\n    { id:0, label:'PWM', mode:'pwm' },\r\n    { id:1, label:'DEC', mode:'dec' },\r\n    { id:2, label:'HEX', mode:'hex' }\r\n  ];\r\n\r\n  const rgb = [\r\n    { name:'red', color: '#ff0000'}, \r\n    { name:'green', color: '#00FF00'}, \r\n    { name:'blue', color: '#00FFFF'}, \r\n  ];\r\n\r\n  const mode = props.mode;\r\n\r\n  return(\r\n    <BlockControlWrapper>\r\n      <BlockControlLabel> <span className=\"title\">rgb Control</span> </BlockControlLabel>\r\n      <MenuMode>\r\n        {\r\n          tabs && tabs[0] &&\r\n          tabs.map((item)=>{\r\n            return (\r\n              <Tab\r\n                key={uniqueId('tab_')}\r\n                tab={item} \r\n                className={ item.mode === mode ? 'active' : '' }\r\n                onClick={ ()=> { \r\n                  props.storeSetMode( item.mode );\r\n                 } } \r\n              >\r\n                {item.label}\r\n              </Tab>\r\n            );\r\n          })\r\n        }\r\n      </MenuMode>\r\n      <RgbSelector>\r\n        {\r\n          rgb && rgb[0] &&\r\n          rgb.map((rgbColor) =>{\r\n            return (\r\n              <ColorBarWrapper mode={mode} rgbColor={rgbColor} key={uniqueId('rgb-color_')}/>\r\n            )\r\n          } )\r\n        }\r\n      </RgbSelector>\r\n    </BlockControlWrapper>\r\n  )\r\n}\r\n\r\nexport default connect( mapStateToProps, mapDispatchToProps )( BlockControl )","import React, { useState } from 'react';\r\nimport AppWrapper from './components/AppWrapper/AppWrapper';\r\nimport BlockLed from './components/BlockLed/BlockLed';\r\nimport BlockControl from './components/BlockControl/BlockControl';\r\n\r\nconst App = () => {\r\n  return(\r\n    <AppWrapper>\r\n      <BlockLed/>\r\n      <BlockControl/>\r\n    </AppWrapper>\r\n  );\r\n};\r\n\r\nexport default App;","import { combineReducers } from 'redux'\r\n\r\nconst initialState = {\r\n  mode:'pwm',\r\n  color: '#000000',\r\n  channels:{\r\n    red:0,\r\n    green:0,\r\n    blue:0,\r\n    max:100\r\n  }\r\n}\r\n\r\nconst appState = (state = initialState , action) => {\r\n  switch (action.type) {\r\n    case 'SET_COLOR':\r\n      return { ...state, color: action.color}\r\n    case 'SET_MODE':\r\n      return { ...state, mode: action.mode}\r\n    case 'SET_CHANNEL':\r\n      return { ...state, \r\n        channels:{ \r\n          ...state.channels,\r\n          [ action.channel ]: action.value\r\n        }\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default combineReducers({\r\n  appState\r\n})","import React  from 'react';\r\nimport ReactDOM from \"react-dom\";\r\nimport App from './App';\r\n\r\nimport { createStore } from 'redux'\r\nimport { Provider } from 'react-redux'\r\nimport rootReducer from 'store/reducer.store'\r\n\r\nconst store = createStore( \r\n  rootReducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n)\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}