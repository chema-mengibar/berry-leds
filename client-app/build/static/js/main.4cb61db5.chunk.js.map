{"version":3,"sources":["shared/theme.shared.js","style/main.style.js","components/AppWrapper/AppWrapper.js","components/BlockLed/BlockLed.js","components/BlockControl/ColorBarWrapper.BlockControl.js","components/BlockControl/BlockControl.js","App.js","index.js"],"names":["theme","color","light","grey_dark","grey_light","red","green","blue","fontFamily","primary","fontWeigth","bold","MainCSS","createGlobalStyle","_templateObject","Wrapper","styled","div","AppWrapper_templateObject","AppWrapper","_ref","children","react_default","a","createElement","main_style","BlockLedWrapper","BlockLed_templateObject","BlockLedLabel","_templateObject2","Span","span","_templateObject3","ColorInfo","_templateObject4","ColorInfoIcon","_templateObject5","props","hexcolor","ColorInfoData","_templateObject6","BlockLed","_ref$color","className","RgbColorRange","ColorBarWrapper_BlockControl_templateObject","ColorRangeBar","ColorBarWrapper_BlockControl_templateObject2","ColorRangeCursor","ColorBarWrapper_BlockControl_templateObject3","procent","ColorRangeValue","ColorBarWrapper_BlockControl_templateObject4","ColorBarWrapper","value","_ref$rgbColor","rgbColor","name","_ref$mode","mode","_useState","useState","_useState2","Object","slicedToArray","rgbChannels","setRgbChannels","modeMap","pwm","dec","hex","onClick","e","channelValue","channelName","coor","Math","round","nativeEvent","offsetX","currentTarget","getBoundingClientRect","width","prevState","objectSpread","defineProperty","BlockControlWrapper","BlockControl_templateObject","BlockControlLabel","BlockControl_templateObject2","MenuMode","BlockControl_templateObject3","Tab","BlockControl_templateObject4","active","css","BlockControl_templateObject5","RgbSelector","BlockControl_templateObject6","BlockControl","_ref$clicked","clicked","console","log","tabs","id","label","rgb","setMode","map","item","key","uniqueId","tab","ColorBarWrapper_BlockControl","App","setColor","components_AppWrapper_AppWrapper","components_BlockLed_BlockLed","components_BlockControl_BlockControl","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.4cb61db5.chunk.js","sourcesContent":["const theme = {\r\n  color: {\r\n    light: '255,255,255',\r\n    grey_dark: '29,28,32',\r\n    grey_light: '56,54,61',\r\n\r\n    red: '#ff0000',\r\n    green: '#00FF00',\r\n    blue: '#00FFFF',\r\n\r\n  },\r\n  fontFamily: {\r\n    primary: 'Lato'\r\n  },\r\n  fontWeigth: {\r\n    primary: '300',\r\n    bold: '700',\r\n  }\r\n};\r\n\r\nexport default theme;","import { createGlobalStyle } from 'styled-components';\r\nimport theme from 'shared/theme.shared'\r\n\r\nconst MainCSS = createGlobalStyle`\r\n\r\n  @import url('https://fonts.googleapis.com/css?family=Lato:300,700');\r\n\r\n  html, body, #root{\r\n    margin: 0;\r\n    padding: 0;\r\n    border: 0;\r\n    font-size: 100%;\r\n    font: inherit;\r\n    vertical-align: baseline;\r\n    box-sizing: border-box;\r\n    width: 100%;\r\n    min-height: 100%;\r\n    height:100%;\r\n  }\r\n\r\n  body {\r\n    line-height: 1;\r\n    font-family: ${ theme.fontFamily.primary};\r\n  }\r\n\r\n`;\r\n\r\nexport default MainCSS;","// @flow\r\n\r\nimport React, { Component, Fragment } from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport MainCSS from 'style/main.style';\r\nimport theme from 'shared/theme.shared';\r\n\r\nconst Wrapper = styled.div`\r\n  background-color: red;\r\n  height:100%;\r\n  width:100%;  \r\n \r\n  @media (max-width: 700px) {\r\n    background-color: ${theme.color.green};\r\n  }\r\n`;\r\n\r\n//AppWrapper or Fragment\r\nconst AppWrapper = ({\r\n  children,\r\n}:Props):Node => (\r\n  <Wrapper>\r\n    <MainCSS/>\r\n    {children}\r\n  </Wrapper>\r\n);\r\n\r\nexport default AppWrapper;","import React from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport theme from 'shared/theme.shared'\r\n\r\nconst BlockLedWrapper = styled.div`\r\n\r\n  background: rgb(${theme.color.grey_dark});\r\n  // background: -moz-linear-gradient(-45deg, rgb(${theme.color.grey_light}) 0%, rgb(${theme.color.grey_dark}) 63%); \r\n  // background: -webkit-linear-gradient(-45deg, rgb(${theme.color.grey_light}) 0%, rgb(${theme.color.grey_dark}) 63%);\r\n  background: linear-gradient( 165deg, rgb(${theme.color.grey_light}) 0%, rgb(${theme.color.grey_dark}) 63%);\r\n  // filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='rgb(${theme.color.grey_light})', endColorstr='rgb(${theme.color.grey_dark})',GradientType=1 );\r\n  height:auto;\r\n  overflow:auto;\r\n  min-height:200px;\r\n  width:100%;  \r\n  padding:30px 20px 0;\r\n`\r\n\r\nconst BlockLedLabel = styled.div`\r\n  margin:0;\r\n  padding:0;\r\n  height:20px;\r\n  width:100%;\r\n  height:auto;\r\n  float:left;\r\n`;\r\n\r\nconst Span = styled.span`\r\n    color:rgb( ${theme.color.light});\r\n    font-weight: ${theme.fontWeigth.primary};\r\n    font-size:28px;\r\n    text-transform: uppercase;\r\n`;\r\n\r\nconst ColorInfo = styled.div`\r\n  float:left;\r\n  min-height:100px;\r\n  height:auto;\r\n  overflow:hidde;\r\n  width:100%;\r\n  margin-top:10px;\r\n`;\r\n\r\nconst ColorInfoIcon = styled.div`\r\n  float:left;\r\n  height:100px;\r\n  width:100px;\r\n  border:10px solid rgba(12,12,12,.5);\r\n  border-radius: 0px 30px 30px 30px;\r\n  background-color: ${(props) => props.hexcolor };\r\n  margin-right:20px;\r\n`\r\n\r\nconst ColorInfoData = styled.div`\r\n\r\n  color: rgb(${theme.color.light});\r\n  text-transform: uppercase;\r\n  line-height: 100px;\r\n  \r\n  .color-info-data__label{\r\n    font-weight: ${theme.fontWeigth.primary};\r\n    margin-right:7px;\r\n  }\r\n\r\n  .color-info-data__value{\r\n    font-weight: ${theme.fontWeigth.bold};\r\n  }\r\n`\r\n\r\nconst BlockLed = ({\r\n  color = '#FF0000'\r\n}) => {\r\n  return(\r\n    <BlockLedWrapper>\r\n      <BlockLedLabel> \r\n        <Span>Led</Span>\r\n      </BlockLedLabel>\r\n      <ColorInfo>\r\n        <ColorInfoIcon hexcolor={color}></ColorInfoIcon>\r\n        <ColorInfoData>\r\n          <span className=\"color-info-data__label\">HEX</span>\r\n          <span className=\"color-info-data__value\"> {color} </span>\r\n        </ColorInfoData>\r\n      </ColorInfo>\r\n    </BlockLedWrapper>\r\n  )\r\n}\r\n\r\nexport default BlockLed","import React, { useState } from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport theme from 'shared/theme.shared';\r\nimport ReactCursorPosition from 'react-cursor-position';\r\n\r\nconst RgbColorRange = styled.div`\r\n  display:flex;\r\n  height:40px;\r\n  width:100%;\r\n  margin-top:20px;\r\n  position:relative;\r\n  float:left;\r\n`\r\nconst ColorRangeBar = styled.div`\r\n  height:100%;\r\n  flex-grow:1;\r\n  background-color: rgba( ${theme.color.grey_dark}, .1 );\r\n  cursor:pointer;\r\n`\r\n\r\nconst ColorRangeCursor = styled.div`\r\n  width:  ${props => props.procent + '%'};\r\n  height:100%;\r\n  background-color: ${props => props.color };\r\n  -webkit-transition: width ${props => props.procent}ms ease-out;\r\n  -ms-transition: width 400ms ease-out;\r\n  transition: width 400ms ease-out;\r\n`\r\n\r\nconst ColorRangeValue = styled.div`\r\n  width:40px;\r\n  height: 100%;\r\n  background-color: rgb(${theme.color.grey_dark});\r\n  color:rgb(  ${theme.color.light} );\r\n  line-height:40px;\r\n  text-align:center;\r\n`\r\n\r\nconst ColorBarWrapper = (\r\n  {\r\n    rgbColor = { name:'white', color:'#ffffff'  },\r\n    mode = 'pwm'\r\n  }\r\n) => {\r\n  const [ rgbChannels, setRgbChannels] = useState( {\r\n    red:0,\r\n    green:0,\r\n    blue:0,\r\n  } );\r\n\r\n  const modeMap = {\r\n    pwm: 100,\r\n    dec: 255,\r\n    hex: 255\r\n  };\r\n  \r\n\r\n  const onClickChannel = ( channelValue, channelName ) => {\r\n    setRgbChannels( prevState =>{ \r\n      return { ...prevState, [channelName]: channelValue }\r\n    } )\r\n  }\r\n\r\n  const valueConversion = ( value ) => {\r\n    let conversion;\r\n    if( mode === 'dec' || mode === 'hex' ){\r\n      conversion =  Math.round(( value*100)/255);\r\n    }else{\r\n      conversion = value;\r\n    }\r\n    return conversion;\r\n  }\r\n\r\n  //.toString(16);\r\n\r\n  return (\r\n    <RgbColorRange>\r\n      <ColorRangeBar onClick={(e)=> { \r\n          let coor = Math.round( (e.nativeEvent.offsetX * modeMap[mode] ) / e.currentTarget.getBoundingClientRect().width);\r\n          onClickChannel( coor, rgbColor.name ) \r\n        } } >\r\n        <ColorRangeCursor color={ rgbColor.color } procent={ valueConversion( rgbChannels[ rgbColor.name ] ) }></ColorRangeCursor>\r\n      </ColorRangeBar>\r\n      <ColorRangeValue> { rgbChannels[ rgbColor.name ] } </ColorRangeValue>\r\n    </RgbColorRange>\r\n  )\r\n}\r\n\r\nexport default ColorBarWrapper;","import React, { useState } from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport uniqueId from 'lodash/uniqueId';\r\nimport theme from 'shared/theme.shared';\r\nimport ColorBarWrapper from './ColorBarWrapper.BlockControl';\r\n\r\nconst BlockControlWrapper = styled.div`\r\n  height:250px;\r\n  width:100%;  \r\n  padding:30px 0 0;\r\n  background-color: rgb(${theme.color.grey_dark});\r\n`\r\n\r\nconst BlockControlLabel = styled.div`\r\n  padding-left:30px;\r\n  margin-bottom:20px;\r\n\r\n  .title{\r\n    color:rgb( ${theme.color.light} );\r\n    font-weight: ${theme.fontWeigth.primary};\r\n    font-size:28px;\r\n    text-transform: uppercase;\r\n  }\r\n`\r\nconst MenuMode = styled.div`\r\n  height:30px;\r\n  width:100%;\r\n  display:flex;\r\n  flex-direction:row;\r\n`\r\nconst Tab = styled.div`\r\n  flex-grow:1;\r\n  text-align:center;\r\n  line-height:30px;\r\n  background: rgba( ${theme.color.light} , .04);\r\n  color: rgb(${theme.color.light});\r\n  cursor:pointer;\r\n  -webkit-transition: background-color 400ms ease-in;\r\n  -ms-transition: background-color 400ms ease-in;\r\n  transition: background-color 400ms ease-in;\r\n  \r\n  // ${ (props) => props.active && css`\r\n  //   background: rgba( ${theme.color.light}, 1.0);\r\n  //   color: rgb(${theme.color.grey_dark});\r\n  // `}\r\n  \r\n  &.active{\r\n    background: rgba( ${theme.color.light}, 1.0);\r\n    color: rgb(${theme.color.grey_dark});\r\n  }\r\n`\r\n\r\nconst RgbSelector = styled.div`\r\n  background-color:rgb( ${theme.color.light} );\r\n  height:100%;\r\n  width:100%;\r\n`\r\n\r\n\r\nconst BlockControl = ({\r\n  clicked = () => {\r\n    console.log('no color')\r\n  },\r\n}) => {\r\n\r\n  const tabs = [\r\n    { id:0, label:'PWM', mode:'pwm' },\r\n    { id:1, label:'DEC', mode:'dec' },\r\n    { id:2, label:'HEX', mode:'hex' }\r\n  ];\r\n\r\n  const rgb = [\r\n    { name:'red', color: '#ff0000'}, \r\n    { name:'green', color: '#00FF00'}, \r\n    { name:'blue', color: '#00FFFF'}, \r\n  ];\r\n\r\n  const [mode, setMode] = useState('pwm');\r\n\r\n  return(\r\n    <BlockControlWrapper>\r\n      <BlockControlLabel> <span className=\"title\">rgb Control</span> </BlockControlLabel>\r\n      <MenuMode>\r\n        {\r\n          tabs && tabs[0] &&\r\n          tabs.map((item)=>{\r\n            return (\r\n              <Tab\r\n                key={uniqueId('tab_')}\r\n                tab={item} \r\n                className={ item.mode === mode ? 'active' : '' }\r\n                onClick={ ()=> { \r\n                  clicked('#336699');\r\n                  setMode( item.mode )\r\n                 } } \r\n              >\r\n                {item.label}\r\n              </Tab>\r\n            );\r\n          })\r\n        }\r\n      </MenuMode>\r\n      <RgbSelector>\r\n        {\r\n          rgb && rgb[0] &&\r\n          rgb.map((rgbColor) =>{\r\n            return (\r\n              <ColorBarWrapper mode={mode} rgbColor={rgbColor} key={uniqueId('rgb-color_')}/>\r\n            )\r\n          } )\r\n        }\r\n        \r\n      </RgbSelector>\r\n    </BlockControlWrapper>\r\n  )\r\n}\r\n\r\nexport default BlockControl","import React, { useState } from 'react';\r\nimport AppWrapper from './components/AppWrapper/AppWrapper';\r\nimport BlockLed from './components/BlockLed/BlockLed';\r\nimport BlockControl from './components/BlockControl/BlockControl';\r\n\r\nconst App = () => {\r\n\r\n  const [ color, setColor] = useState('#FFFFFF');\r\n\r\n  return(\r\n    <AppWrapper>\r\n      <BlockLed color={ color } />\r\n      <BlockControl clicked={(color) => setColor(color)} />\r\n    </AppWrapper>\r\n  );\r\n};\r\n\r\n\r\nexport default App;","import React  from 'react';\r\nimport ReactDOM from \"react-dom\";\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}